# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html?highlight=package_data
[metadata]
name = {{ cookiecutter.pkg_name }}
version = attr: {{ cookiecutter.pkg_name }}.__version__
author = {{ cookiecutter.author_name.replace("\"", "\\\"") }}
author_email = {{ cookiecutter.email }}
maintainer = {{ cookiecutter.author_name.replace("\"", "\\\"") }}
maintainer_email = {{ cookiecutter.email }}
description = {{ cookiecutter.project_short_description.replace("\'", "\\\'") }}
long_description = file: README.md
long_description_content_type = text/markdown
keywords = utility,
platforms = Any
url = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.pkg_name }}
download_url = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.pkg_name }}/archive/refs/heads/main.zip
license = {{ cookiecutter.license }}
license_files = LICENSE
project_urls =
    Bug Tracker = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.pkg_name }}/issues
    CI = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.pkg_name }}/actions
    Documentation = https://{{ cookiecutter.pkg_name }}.readthedocs.io/en/latest/
    Release Notes = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.pkg_name }}/releases
    Source Code = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.pkg_name }}/

# https://pypi.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 1 - Planning
    Environment :: Console
    Intended Audience :: Developers
    {%- if cookiecutter.license|lower == "MIT" %}
    License :: OSI Approved :: MIT License{% endif %}
    {%- if cookiecutter.license|lower == "BSD-3-Clause" %}
    License :: OSI Approved :: BSD License{% endif %}
    {%- if cookiecutter.license|lower == "ISC" %}
    License :: OSI Approved :: ISC License (ISCL){% endif %}
    {%- if cookiecutter.license|lower == "Apache-2.0" %}
    License :: OSI Approved :: Apache Software License{% endif %}
    {%- if cookiecutter.license|lower == "GPL-3.0-only" %}
    License :: OSI Approved :: GNU General Public License v3 (GPLv3){% endif %}
    {%- if cookiecutter.target_OS == "all" %}
    Operating System :: OS Independent{% endif %}
    {%- if cookiecutter.target_OS == "windows" %}
    Operating System :: Microsoft :: Windows{% endif %}
    {%- if cookiecutter.target_OS == "linux" %}
    Operating System :: POSIX :: Linux{% endif %}
    {%- if cookiecutter.target_OS == "macos" %}
    Operating System :: MacOS{% endif %}
    Natural Language :: English
# for EOL versions see: https://devguide.python.org/versions/
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    {%- if cookiecutter.supported_python_version == ">=3.7" or cookiecutter.supported_python_version == ">=3.8" %}
    Programming Language :: Python :: 3.8{% endif %}
    {%- if cookiecutter.supported_python_version == ">=3.7" or cookiecutter.supported_python_version == ">=3.8" or cookiecutter.supported_python_version == ">=3.9" %}
    Programming Language :: Python :: 3.9{% endif %}
    {%- if cookiecutter.supported_python_version == ">=3.7" or cookiecutter.supported_python_version == ">=3.8" or cookiecutter.supported_python_version == ">=3.9" or cookiecutter.supported_python_version == ">=3.10" %}
    Programming Language :: Python :: 3.10{% endif %}
    {%- if cookiecutter.supported_python_version == ">=3.7" or cookiecutter.supported_python_version == ">=3.8" or cookiecutter.supported_python_version == ">=3.9" or cookiecutter.supported_python_version == ">=3.10" or cookiecutter.supported_python_version == ">=3.11" %}
    Programming Language :: Python :: 3.11{% endif %}
    {%- if cookiecutter.supported_python_version == ">=3.7" or cookiecutter.supported_python_version == ">=3.8" or cookiecutter.supported_python_version == ">=3.9" or cookiecutter.supported_python_version == ">=3.10" or cookiecutter.supported_python_version == ">=3.11" or cookiecutter.supported_python_version == ">=3.12" %}
    Programming Language :: Python :: 3.12{% endif %}


[options]
package_dir=
    =src
packages = find:
include_package_data = True
python_requires = {{ cookiecutter.supported_python_version }}
install_requires =
    {%- if cookiecutter.command_line_interface|lower == 'click' %}
    click{% endif %}
    {%- if cookiecutter.command_line_interface|lower == 'docopt' %}
    docopt{% endif %}
    {%- if cookiecutter.use_logging == 'y' or cookiecutter.config_file == 'yaml' or cookiecutter.config_file == 'all' %}
    pyyaml{% endif %}
    {%- if cookiecutter.config_file == 'toml' or cookiecutter.config_file == 'all' %}
    toml{% endif %}
    {%- if cookiecutter.command_line_interface|lower == 'typer' %}
    typer[all]{% endif %}
    {%- if cookiecutter.resource_file == 'png' or cookiecutter.resource_file == 'all' %}
    Pillow{% endif %}


[options.packages.find]
where = src

[options.package_data]
{{ cookiecutter.pkg_name }} =
    {%- if cookiecutter.config_file == 'json' or cookiecutter.config_file == 'all' %}
    resources/config.json{% endif %}
    {%- if cookiecutter.config_file == 'ini' or cookiecutter.config_file == 'all' %}
    resources/config.ini{% endif %}
    {%- if cookiecutter.config_file == 'toml' or cookiecutter.config_file == 'all' %}
    resources/config.toml{% endif %}
    {%- if cookiecutter.config_file == 'yaml' or cookiecutter.config_file == 'all' %}
    resources/config.yaml{% endif %}
    {%- if cookiecutter.resource_file == 'pickle' or cookiecutter.resource_file == 'all' %}
    resources/resource.pickle{% endif %}
    {%- if cookiecutter.resource_file == 'png' or cookiecutter.resource_file == 'all' %}
    resources/resource.png{% endif %}
    {%- if cookiecutter.resource_file == 'sqlite' or cookiecutter.resource_file == 'all' %}
    resources/resource.db{% endif %}

[options.entry_points]
console_scripts =
    {{ cookiecutter.pkg_name }} = {{ cookiecutter.pkg_name }}.{{ cookiecutter.pkg_name }}:main


{% if cookiecutter.use_flake8 == 'y' -%}
[flake8]
# https://flake8.pycqa.org/en/latest/user/options.html
# flake8 -                F401-F901
# flake8-comprehensions - C400-C416
# flake8-bugbear -        B001-B018, B901-B950
# flake8-docstrings -     D100-D418 (flake8 plugin for pydocstyle)
# pycodestyle -           E101-E902, W191-W606
# pep8-naming -           N801-N818
docstring-convention = {{ cookiecutter.docstrings_style }}
max-complexity = 18
max-line-length = 88
select = B, B9, C, D, E, F, N, W
exclude = tests/*,.tox/*,.nox/*,docs/*,.git/*,.github/*
ignore =
    # pycodestyle - whitespace before ‘,’, ‘;’, or ‘:’ - to be compatible with black
    E203,
    # pycodestyle - line break before binary operator
    W503,
per-file-ignores =
    # flake8 - module imported but not used
    __init__.py:F401
    pathmagic.py:F401
    test_{{ cookiecutter.pkg_name }}.py:F401
{%- endif %}
