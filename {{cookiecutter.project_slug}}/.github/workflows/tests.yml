# https://docs.github.com/en/actions
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: test

on:
  push:
    branches: [default-branch1]
  pull_request:
    branches: [default-branch2]
  workflow_dispatch:
    branches: [main]

jobs:
  test:
    # Step 1. Set up operating system
    {% raw %}
    runs-on: ${{ matrix.os }}
    {% endraw %}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        {%- if cookiecutter.supported_python_version == ">=3.7" %}
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]{% endif %}
        {%- if cookiecutter.supported_python_version == ">=3.8" %}
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]{% endif %}
        {%- if cookiecutter.supported_python_version == ">=3.9" %}
        python-version: ["3.9", "3.10", "3.11", "3.12"]{% endif %}
        {%- if cookiecutter.supported_python_version == ">=3.10" %}
        python-version: ["3.10", "3.11", "3.12"]{% endif %}
        {%- if cookiecutter.supported_python_version == ">=3.11" %}
        python-version: ["3.11", "3.12"]{% endif %}
        {%- if cookiecutter.supported_python_version == ">=3.12" %}
        python-version: ["3.12"]{% endif %}
    steps:
      # Step 2. Check-out repository so we can access its contents
      - uses: actions/checkout@v3
      # Step 3. Set up Python 3.9
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      # step 4. Install the dependencies from requirements.txt file
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install flake8 pytest pytest-cov
          pip install -r requirements/test.txt
      # Step 5. Install the package
      - name: Install package
        run: |
          pip install -e .
      # Step 6. Lint the files with flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true
      # Step 7. Run the tests
      - name: Test with pytest
        run: |
          pytest tests/ --cov={{ cookiecutter.pkg_name }} --cov-report xml:coverage.xml
      # Step 8. Use Codecov to track coverage
      - uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_build_if_error: true
